{
  tokens = [
    SEMI=';'
    LBRACKET='['
    RBRACKET=']'
    LPAREN='('
    RPAREN=')'
    LCURLY='{'
    RCURLY='}'
    COMMA=','
    COLON=':'

    // type declarations
    SERVICE='service'
    METHOD='method'
    DATA='data'
    ENUM='enum'

    // Types
    STRING='string'
    INT32='int32'
    INT64='int64'
    DECIMAL='decimal'
    DOUBLE='double'
    BOOLEAN='boolean'
    OBJECT='object'
    MAP='map'
    BYTES='bytes'
    RESULT='result'
    ERROR='error'

    space='regexp:\s+'
    comment='regexp:(///.*)|(#.*)'
    number='regexp:\d+(\.\d*)?'
    id='regexp:\p{Alpha}\w*'
    string='regexp:"[^"]*"'
    attribute='regexp:([a-zA-Z_][a-zA-Z_0-9]*)\\b\\]'
    result_of_type='regexp:result<[a-zA-Z_0-9]*>'
  ]

  parserClass="com.facilityapi.parser.SimpleParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Simple"
  psiImplClassSuffix="Impl"
  psiPackage="com.facilityapi.psi"
  psiImplPackage="com.facilityapi.psi.impl"

  elementTypeHolderClass="com.facilityapi.psi.FsdTypes"
  elementTypeClass="com.facilityapi.psi.FsdElementType"
  tokenTypeClass="com.facilityapi.psi.FsdTokenType"
}

file ::= top_level_element*
top_level_element ::= (service_declaration|attribute_section|comment)

attribute_section ::= 'regexp:[\s*(?=([a-zA-Z_][a-zA-Z_0-9]*)\\b)' attribute 'regexp:\\]'
attribute ::= 'regexp:([a-zA-Z_][a-zA-Z_0-9]*)\\b'
attribute_parameters ::=

service_declaration ::= 'service' id 'regexp:\\s+' definition_body

data_declaration ::=
enum_delcaration ::=
errors_declaration ::=
method_declaration ::=
member_declaration ::=
